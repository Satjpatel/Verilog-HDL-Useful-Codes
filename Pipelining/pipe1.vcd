$date
	Tue Sep  1 07:52:50 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module pipeline_tb $end
$var wire 10 ! F [9:0] $end
$var reg 10 " A [9:0] $end
$var reg 10 # B [9:0] $end
$var reg 10 $ C [9:0] $end
$var reg 10 % D [9:0] $end
$var reg 1 & clk $end
$scope module MyPipeDUT $end
$var wire 10 ' A [9:0] $end
$var wire 10 ( B [9:0] $end
$var wire 10 ) C [9:0] $end
$var wire 10 * D [9:0] $end
$var wire 10 + F [9:0] $end
$var wire 1 & clk $end
$var reg 10 , F_Out [9:0] $end
$var reg 10 - L12_D [9:0] $end
$var reg 10 . L12_x1 [9:0] $end
$var reg 10 / L12_x2 [9:0] $end
$var reg 10 0 L23_D [9:0] $end
$var reg 10 1 L23_x3 [9:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 1
bx 0
bx /
bx .
bx -
bx ,
bx +
bx *
bx )
bx (
bx '
0&
bx %
bx $
bx #
bx "
bx !
$end
#10
b0 -
b0 /
b0 .
b0 %
b0 *
b0 $
b0 )
b0 #
b0 (
b0 "
b0 '
1&
#20
0&
#30
b0 0
b0 1
b100 -
b1111111111 /
b11 .
1&
b100 %
b100 *
b11 $
b11 )
b10 #
b10 (
b1 "
b1 '
#40
0&
#50
b10 -
b11 /
b100 0
b10 1
b0 !
b0 +
b0 ,
1&
b10 %
b10 *
b101 $
b101 )
b11 #
b11 (
b0 "
b0 '
#60
0&
#70
b1000 !
b1000 +
b1000 ,
b10 0
b110 1
b1 -
b0 /
b1 .
1&
b1 %
b1 *
b1 $
b1 )
b0 #
b0 (
b1 "
b1 '
#80
0&
#90
b10 -
b100 .
b1 0
b1 1
b1100 !
b1100 +
b1100 ,
1&
b10 %
b10 *
b10 $
b10 )
b10 #
b10 (
b10 "
b10 '
#100
0&
#110
b1 !
b1 +
b1 ,
b10 0
b100 1
1&
#120
0&
#130
b1000 !
b1000 +
b1000 ,
1&
#140
0&
#150
1&
#160
0&
#170
1&
#180
0&
#190
1&
#200
0&
